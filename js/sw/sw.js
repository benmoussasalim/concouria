
/*############################### # Progexpert ###############################*/ var sw_time = [] ,delay_timer = {} ,sw_class = {} ,page_pos = {} ,update_count = 0 ,prevent_page = false ,update_ready = true ,push_url = true ,current_url = window.location.href ,no_nav = false ,force_top = false ,prevent_loading = false ,sw_file = false ,sw_file_data ,sw_param = {} ; /*Fonction principale pour générer une requête*/ function sw(filter) { sw_param = {}; /*Blocage automatique de la requête si un abus est détecté*/ if(update_count >= 10) { if(!is_admin) { throwMessage(traduction['pending_query'],true,'query-count'); } else { sw_message(traduction['pending_query'],true,'query-count'); } return false; } update_ready = false; update_count++; /*Jumelage du request avec les nouveaux filtres*/ filter = filter || {}; filter = $.extend(request,filter); /*Package - à ne plus utiliser*/ if(filter.package != null) { request['package'] = request['package'] || {}; filter = $.extend(filter,request['package'][filter.package]); delete filter.package; } /*Ajout de class sur les modules*/ if(filter.module != null) { /*Vérification si on veut ajouter autre chose que toggle-section sur le module (ex: filter['sw_class']['PageContent'] = 'toggle-page';)*/ if(filter.sw_class != null) { sw_class = filter.sw_class; delete filter.sw_class; } /*Vérification si la méthode de retour est le même nom que le module ou que celui-ci ai un sw_class pour l'ajout de class respective*/ $.each(filter.module,function(key,value) { if(key == value) { $('[data-section="'+ key +'"]').addClass(sw_class[key] || 'toggle-section'); } }); } /*Capture du temps avant la requête*/ sw_time['start'] = new Date().getTime(); filter['sw_admin'] = is_admin; /*Détection upload de fichier*/ if(sw_file == true) { sw_file_data.append('filter',JSON.stringify(filter)); sw_param['processData'] = false; sw_param['contentType'] = false; sw_param['data'] = sw_file_data; } else { sw_param['data'] = {'filter':$.extend({},filter)}; } sw_param['type'] = filter.a == 'loadContent' ? 'GET' : 'POST'; sw_param['url'] = _SITE_URL + 'mod/act_p/DispatchAct.php'; sw_param['success'] = swSuccess; sw_param['error'] = swError; $.ajax(sw_param); } /*Vérification si l'éditeur de contenu/image est actif*/ function swActive() { if($('body').hasClass('sw-edit-content') || $('body').hasClass('sw-edit-image') || $('body').hasClass('sw-shortcut')) { return true; } else { return false; } } /*Calcul du délai restant avant d'égaliser le paramètre delay*/ function swDelay(delay) { var delay_timer = 0; if(delay == null && delay !== 0) { delay = default_delay; } if(sw_time['duration'] < delay) { delay_timer = delay - sw_time['duration']; } return delay_timer; } /*Utilisé pour éviter un lag lors de l'ajout du contenu et de la suppression de la class*/ function bufferClass(section) { setTimeout(function() { $('[data-section="'+ section +'"]').removeClass(sw_class[section] || 'toggle-section'); delete sw_class[section]; },50); } /*Permet le changement de page*/ function changePage(url,placeholder_url) { /*Unbind tous les script reliés à la page actuelle*/ $('body').off('.sw'); $(window).off('.sw'); /*Class pour le changement de page*/ $('body').addClass('toggle-page'); /*Class pour le changement de page*/ $('body').removeClass(request['p'] + ' toggle-search toggle-menu'); /*Suppression des class susceptibles d'être utilisées et/ou actives*/ popup(); /*Fermeture du popup si actif*/ /*@CURRENT_PAGE*/ /*Tente de supprimer et d'ajouter la classe à tous les liens faisant référence à la nouvelle page*/ /*$('a[href="'+ formatUrl(window.location.href,false).split('?')[0] +'"]').removeClass('current');*/ $('a.current').removeClass('current'); $('a[href="'+ url +'"]').addClass('current'); /*Capture de la position actuelle de la page*/ page_pos[formatUrl(placeholder_url || window.location.href,true)] = $(window).scrollTop(); /*Définition des varaibles nécéssaires pour le changement de page*/ request = { 'url': url ,'path': 'Navigation' ,'a': 'loadContent' ,'module': {'PageContent':'PageContent'} }; sw(); } /*Unification de l'url*/ function formatUrl(url,replace_home) { if(replace_home || false == true) { url = url.replace('accueil',''); url = url.replace('home',''); } url = url.replace(/https?:\/\//i, ""); return '//' + url.replace('//', ""); } /*Retour du changement de page*/ function swPageContent(data,include,value) { if(data.page_not_found == 1) { window.location.href = _SITE_URL + '404'; } setTimeout(function() { var scroll_to = page_pos[formatUrl(data.url,true)] || 0; /*Manipulation des class sur le body et .sw-content*/ data['p_style'] = data['p_style'] ? data['p_style'] : request['p']; $('[data-section="'+ include +'"], .sw-content').attr('id',data['p_style']); $('[data-section="'+ include +'"]').html(value); /*Possibilité de forcer le scroll en haut de page*/ if(force_top == true) { scroll_to = 0; force_top = false; } /*Scroll par défaut de la page*/ $('body,html').scrollTop(scroll_to); current_url = window.location.href; setTimeout(function() { $('[data-section="'+ include +'"]').removeClass(sw_class[include] || 'toggle-section'); delete sw_class[include]; $('[data-section="'+ include +'"]').attr('class','sw-content ' + (data.page_class || '')); var body_class = data['p_style']; if(data.bodyClass != null) { body_class += ' ' + data.bodyClass; } $('body').attr('class',body_class); },50); if(typeof(_DEFER_IMG) !== 'undefined' && _DEFER_IMG){deferImg(0);} /*Ajout de l'url pour Google Analytics*/ if (typeof ga !== 'undefined') { if ('ga' in window) { tracker = ga.getAll()[0]; if (tracker){ tracker.send('pageview', location.pathname); console.log('send ->pageview'+location.pathname); } } } $(window).scroll(); },delay_timer[include] || default_delay); } function closePopup(popup) { var selector = ''; if($('.popup-overlay').length) { if(popup.hasClass('popup-overlay')) { selector = popup.attr('class'); } else { selector = popup.parents('.popup-overlay').attr('class'); } selector = selector.replace(' ',' '); selector = '.' + selector.split(' ').join('.'); selector = selector.replace('.trigger',''); $(selector +',body').removeClass('trigger'); setTimeout(function() { $(selector).remove(); }, 500); } } function throwMessage(message,error,id) { var class_error = 'success'; if(error == true) { class_error = 'error'; } if(!$('.message-box').length) { $(body).append('<ul class="message-box"></ul>'); } if(id == null || $('.message-box li.' + id).length < 2) { $('.message-box').append('<li class="new '+ id +' '+ class_error +'"><span class="message-icon"></span><p>'+ message +'</p></li>'); } setTimeout(function() { $('.message-box li.new').each(function() { var line = $(this); line.removeClass('new'); var timer = setTimeout(function() { line.addClass('new'); setTimeout(function() { line.remove(); if(!$('.message-box li').length) { $('.message-box').slideUp(250, function() { $('.message-box').remove(); }); } },250); },msg_delay); }); },10); } /*Validation d"un formulaire, ajouter la class 'required' sur les champs voulus. Les champs en erreur vont avoir la class 'form-error'*/ function validateForm(form,default_error,input_class) { var form_array = []; input_class = input_class || false; $(form).find('.required').each(function() { if($(this).attr('type') == 'radio' && !$('input[type="radio"][name="'+ $(this).attr("name") +'"]').is(':checked')) { if(input_class == false) { $('input[type="radio"][name="'+ $(this).attr("name") +'"]').addClass('form-error'); } form_array.push($(this).attr('name')); } else if($(this).val() == 'all' || $(this).val() == '' || $(this).attr('type') == 'checkbox' && !$(this).is(':checked')) { if(input_class == false) { $(this).addClass('form-error'); } form_array.push($(this).attr('name')); } else { $(this).removeClass('form-error'); } }); if(form_array.length == 0) { return true; } else { if(default_error == true) { throwMessage(traduction['validate_form'],true,'default-error'); } return false; } } /*Construction du formulaire dans la variable request['form'], utilisez la class 'js-sw-submit-child' pour l'ajouter à l'objet*/ /*Vous pouvez aussi ajouter un group avec un data-group pour ajouter des champs dans le meme objet*/ function buildForm(form) { var then = form; request['form'] = {}; sw_file_data = new FormData(); form.find('.js-sw-submit-child').each(function() { var value = $(this).val(), group = $(this).data('group'),name = $(this).attr('name'); if($(this).attr('type') == 'file') { if(this.files.length) { sw_file = true; $.each(this.files,function(id_sw_file,sw_file) { sw_file_data.append(name + '-' + id_sw_file,sw_file); }); } } else { if($(this).attr('type') == 'password' && $(this).val() != '') { value = $.md5(value); } else if($(this).attr('type') == 'checkbox' && !$(this).is(':checked')) { value = null; } else if($(this).attr('type') == 'radio') { value = then.find('input[name="'+ name +'"]:checked').val(); } if($(this).is('textarea')) { value = value.replace(/\r\n|\r|\n/g,"<br/>"); } if(group) { request['form'][group] = request['form'][group] || {}; request['form'][group][name] = value; } else { request['form'][name] = value; } } }); } $(document).ready(function() { /*THROW_MESSAGE*/ $('body').on('click','.message-box li',function() { var then = $(this); $(this).removeClass('new'); setTimeout(function() { then.remove(); },250); return false; }); /*@SW_CHANGE*/ /*Changement détecté sur l'élément*/ $('body').on('change','.js-sw-change,[data-change]',function() { var value = $(this).val(); if($(this).attr('type') == 'checkbox' && !$(this).is(':checked')) { value = null; } var data = $(this).data('change') || $(this).data('sw'); data = data || {}; data[$(this).attr('name')] = value; sw(data); }); /*@SW_CLICK*/ /*Déclenchement lors du clic*/ $('body').on('click','.js-sw-click,[data-click]',function(e) { if(!swActive() && !$(e.target).hasClass('js-prevent')) { sw($(this).data('click') || $(this).data('sw')); } e.preventDefault(); }); /*@SW_SUBMIT*/ /*Envoi de formulaire*/ $('body').on('submit','.js-sw-submit,[data-submit]',function(e) { if(validateForm($(this))) { if(dynamic_nav == true && $(this).attr('method') == 'GET' && $(this).attr('action')) { changePage($(this).attr('action') + '?' + $(this).serialize()); } else if(update_ready == true) { buildForm($(this)); if($(this).data('loading')) { loadingOverlay($(this).data('loading')); } sw($(this).data('submit') || $(this).data('sw')); } } else { throwMessage(traduction['validate_form'],true,'form-error'); } e.preventDefault(); }); /* @POPUP */ /*Fermeture du popup*/ $('body').on('click','.js-close-popup',function(e) { if($(this).hasClass('popup-overlay')) { if(e.target === this) { closePopup($(this)); return false; } } else { closePopup($(this)); return false; } }); /* @DYNAMIC_NAV */ /*Bind sur tous les liens du site le changement async des pages*/ if(dynamic_nav !== undefined && dynamic_nav == true) { window.history.replaceState({'url' : window.location.href },null,window.location.href); var initial_state = window.location.href; $('body').on('click.PageContent','a:not(.no-nav):not(.js-sw-click)',function(e) { if(no_nav == false && !$(this).data('click')) { var url = $(this).attr('href'); var valid_url = url.replace(_SITE_URL,'').replace('https:','').split('?')[0]; /*Détection si l'url est locale et que ce n'est pas un fichier et aussi qu'il n'ouvre pas dans un nouvel onglet*/ if(url.search(_SITE_URL) >= 0 && !swActive() && prevent_page == false && valid_url.search(/\./g) == -1 && !$(this).attr('target')) { force_top = true; setTimeout(function() { changePage(url); },50); return false; } prevent_page = false; } no_nav = false; }); /*Capture lors que l'utilisateur fait précédent/suivant*/ window.addEventListener('popstate', function(e) { if(e.state != null) { if(e.state.url == initial_state) { push_url = false; } setTimeout(function() { changePage(e.state.url,current_url); },50); } else { setTimeout(function() { changePage(initial_state,current_url); },50); return false; } }); } }); function swSuccess(data) { try { data = JSON.parse(data); } catch(e) { console.log(e.message);console.log(data); swError(); return false; } if(data == null) data = {}; update_count--; /*Messages*/ if(data.message != null) { if(!is_admin) { throwMessage(data.message,data.error,data.class); } else { sw_message(data.message,data.error,data.class); } } if(data.onReadyJs){ eval(data.onReadyJs); } if(data.title != null) { document.title = data.title; } /*Titre de la page*/ if(data.seo != null || (data.filter && data.filter.a == 'loadContent')) { swSeo(data); } /* Gestion du SEO */ if(data.filter != null) { request = data.filter; } /*Association du nouveau request*/ /*Calcul du temps de la requête*/ sw_time['end'] = new Date().getTime(); sw_time['duration'] = sw_time['end'] - sw_time['start']; /*Ajout des ficihers javascript*/ if(data.script != null) { setTimeout(function() { $.each(data.script,function(include,value) { $.ajax({ url: value.indexOf('.') != -1 ? value : _SITE_URL + 'js/sw/' + value + '.js' ,dataType: 'script' ,cache : true }); }); },data.script_delay || swDelay(section_delay['PageContent'])); } /*Remplacement ou ajout de l'url dans l'historique*/ if(push_url == true) { if(data.url != null && data.url != formatUrl(window.location.href,true)) { window.history.pushState({'url' : data.url,'request': request },null,data.url); } else if(data.replace_url != null && data.replace_url != formatUrl(window.location.href,true)) { window.history.replaceState({'url' : data.replace_url,'request': request },null,data.replace_url); } } push_url = true; delete request.url; /*@MODULE*/ /*Section des modules qui est utilisé pour remplacer l'affichage d'un contenu*/ if(data.section != null && data.module != null) { module = data.module; delete data.module; $.each(data.section,function(include,value) { /*Calcuc du temps nécéssaire au module pour qu'il complète son animation*/ delay_timer[include] = swDelay(section_delay[include]); if(swModule(include,value,data) == false) { /*Si la valeur de retour (include) n'a pas été trouvé on passe par le procédé par défaut (sauf si c'est une page)*/ if(module[include] == 'PageContent') { swPageContent(data,include,value); } else { setTimeout(function() { $('[data-section="'+ include +'"]').html(value); bufferClass(include); },delay_timer[include]); } } deferImg(delay_timer[include] + 50); }); } /*@ACTION*/ /*Section qui est utilisé pour gérer le retour d'une action*/ if(request['a'] != null) { /*Change le menu admin de gauche ($swMenu)*/ if(request['a'] == 'loadContent') { $('.optional-panel.custom-menu-wrapper li:not(.permanent )').remove(); } swAction(data); delete request.a; } /*Change le menu admin de gauche ($swMenu)*/ if(data.admin_menu != null) { $('.optional-panel.custom-menu-wrapper li:not(.permanent )').remove(); data.admin_menu.checkbox = data.admin_menu.checkbox || null; if(data.admin_menu.checkbox != null) { $('.optional-panel.custom-menu-wrapper').append(data.admin_menu.checkbox); } data.admin_menu.list = data.admin_menu.list || null; if(data.admin_menu.list != null) { $('.optional-panel.custom-menu-wrapper').append(data.admin_menu.list); } } /*Suppression de l'overlay du loading*/ if(prevent_loading == false) { loadingOverlay(true); } else { prevent_loading = false; } request['module'] = {}; update_ready = true; sw_file = false; if(data.redirect != null) { changePage(data.redirect); } /*Redirection en async*/ if(data.onReadyJs){eval(data.onReadyJs);} } function swError() { /*Si la requête échoue en réinitialise l'affichage*/ update_count--; $('body').removeClass('toggle-page'); $('[data-section].toggle-section').removeClass('toggle-section'); if(sw_class.length >= 1) { $.each(sw_class,function(section,class_name) { $('[data-section="'+ section +'"]').removeClass(class_name); }); } if(!is_admin) { throwMessage(traduction['query_error'],true,'alert'); } else { sw_message(traduction['query_error'],true,'alert'); } update_ready = true; sw_file = false; loadingOverlay(true); } function swSeo(data) { if(data['filter']['a'] == 'loadContent') { $('.sw-seo').remove(); $('meta[name=description]').attr('content',''); $('meta[name=keywords]').attr('content',''); } if(data['seo'] != null) { if(data['seo']['delete'] != null) { $.each(data['seo']['delete'],function(key,seo_delete) { $('.sw-seo.' + seo_delete).remove(); }); } $.each(data['seo'],function(type,seo) { switch(type) { case 'hreflang': $.each(seo,function(hreflang,src) { $('link[hreflang="'+ hreflang +'"]').attr('href',src); }); break; case 'og': $('head').append(seo); break; case 'schema': $('body').append(seo); break; case 'website': if(seo.description != null) { $('meta[name=description]').attr('content',seo.description); } if(seo.keywords != null) { $('meta[name=keywords]').attr('content',seo.keywords); } break; } }); } }
